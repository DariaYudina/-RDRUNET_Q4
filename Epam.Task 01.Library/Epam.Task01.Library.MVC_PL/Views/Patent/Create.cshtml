@model  CreatePatentModel
@{
    ViewBag.Title = "CreatePatent";
}
<h2>CreatePatent</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DisplayPatentModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PagesCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PagesCount, new { htmlAttributes = new { @class = "form-control" , min="0" } })
                @Html.ValidationMessageFor(model => model.PagesCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Commentary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Commentary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Commentary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.PublicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorsId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AuthorsId, (MultiSelectList)ViewBag.Authors,
                new { @multiple = "true", @class = "form-control chosen-select", size = 3, @id = "authors" })
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addAuthorModal">
                    +
                </button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Html.Partial("~/Views/Author/_AddAuthorPartial.cshtml", new CreateAuthorModel())
<div>
    @Html.ActionLink("Back to List", "Index", "Home", null, null)
</div>
@section Scripts
    {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/chosen.jquery.js"></script>
    <script>
        $(function () {
            $(".chosen-select").chosen(
                {
                    disable_search_threshold: 10,
                    no_results_text: "Oops, nothing found!",
                    placeholder_text_multiple: "Select some authors..."
                })
        });
        function OnAuthorAdd(data) {
            var $form = $('#createAuthor');
            $.validator.unobtrusive.parse($form);
            if (data.IsValid) {
                $(document).find("#authors").append(`<option value = "${data.Id}">${data.FirstName} ${data.LastName}</option>`);
                $('.close').click();
                $('.chosen-select').trigger("chosen:updated");
            } else {
                const element = $(document).find('.validation-summary-errors');
                if (data.msg.length) {
                    let errors = '';
                    data.msg.forEach(el => {
                        errors += `<div>${el}</div>`;
                    });
                    element.removeAttr('hidden').html(errors);
                }

            }
        }
    </script>
}